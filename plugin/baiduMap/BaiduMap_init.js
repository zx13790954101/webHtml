//BaiduMap.loadJScript();  //异步加载地图，直接粘贴到规定的哪里
//设置百度地图属性，设置地图全局变量：map
"use strict";
var BaiduMap = {
    //初始化地图的div位置
    map: "dituContent",
    //当前的地址
    geolocationName: '',
    //地图的名字
    initStratAddress:"",
    loadJScript: function (name) {
        
        window.onload =function(){
            var script = document.createElement("script");
            script.type = "text/javascript";
            script.src = "http://api.map.baidu.com/api?v=2.0&amp;ak=UCXTKdp9dpdTdvimMx11ZFqpQPagGAp9&callback=BaiduMap.initMap("+name+")";
            document.body.appendChild(script);
        }
	},
    loadJScript2: function (name) {
        window.onload = function () {
            var script = document.createElement("script");
            script.type = "text/javascript";
            script.src = "http://api.map.baidu.com/api?v=2.0&amp;ak=UCXTKdp9dpdTdvimMx11ZFqpQPagGAp9&callback=BaiduMap.definiteMap";
            document.body.appendChild(script);
        }
	},
	//添加点
    definiteMap:function(){
        // BaiduMap.definiteMap("detailcenter",'113.30764968','23.1200491');
    	var map= new BMap.Map("detailcenter");
    	var point = new BMap.Point('113.30764968','23.1200491');
    	map.centerAndZoom(new BMap.Point('113.30764968', '23.1200491'), 18);
    	var marker = new BMap.Marker(point);  // 创建标注
	    map.addOverlay(marker);              // 将标注添加到地图中
    },
    //初始化地图
    initMap: function (name) {
        //百度地图的初始化
        var map = new BMap.Map(BaiduMap.map, { minZoom: 9 });//设置一张地图，且规定最小缩放等级10
        var initStratAddress = BaiduMap.initStratAddress;
        if(initStratAddress!=''){
            map.centerAndZoom(new BMap.Point(116.417854, 39.921988), 15);
        }else{
        	map.centerAndZoom(initStratAddress, 15);
        }
        //样式的调整
        map.setMapStyle({
            styleJson: [
                  {
                      "featureType": "poi",//建筑的名称
                      "elementType": "all",
                      "stylers": {
                     
                      }
                  },
                   {
                       "featureType": "road",//线路
                       "elementType": "all",
                       "stylers": {
                     
                       }
                   },
            ]
        });

        window.map = map; //将map变量存储在全局
        BaiduMap.setMapEvent();
        //定位
        var geolocation = new BMap.Geolocation();
        var gc = new BMap.Geocoder();
        var province ="";//省份
        var city = "";//城市
        var area = "";//区
        if (localStorage.getItem("address")) {
            if (localStorage.getItem("address")=='全市[ 切换 ]') {
                map.centerAndZoom("广东省东莞市", 11);
            }else{
                $(".select-city").val(localStorage.getItem("address"))
                map.centerAndZoom(localStorage.getItem("address2").split("-").join(""), 15);
            }
        } else {
            //定位
            //geolocation.getCurrentPosition(function (r) {
            //    if (this.getStatus() == BMAP_STATUS_SUCCESS) {
            //        var pt = r.point;
            //        gc.getLocation(pt, function (rs) {
            //            var addComp = rs.addressComponents;
            //            province = addComp.province;
            //            city = addComp.city;
            //            area = addComp.district;
            //            BaiduMap.geolocationName = province + "-" + city + "-" + area;
            //            $("#select-city").val(province + "-" + city + "-" + area);
            //            if (province != "" && city != "" && area != "") {
            //                map.centerAndZoom(province + city + area, 15);
            //            }
            //            map.setZoom(17);
            //            var mk = new BMap.Marker(r.point);
            //            map.addOverlay(mk);
            //            map.panTo(r.point);
                      
            //            localStorage.setItem("address", area + " [ 切换 ]");
            //            localStorage.setItem("address2", province + "-" + city + "-" + area);

            //        });
            //    } else {
            //        console.log('failed' + this.getStatus());
            //    }
            //}, { enableHighAccuracy: true });

            $(".select-city").val("莞城区[ 切换 ]")
            map.centerAndZoom("广东省东莞市莞城区", 15);
            localStorage.setItem("address", "莞城区[ 切换 ]");
            localStorage.setItem("address2", "广东省" + "-" + "东莞市" + "-" + "莞城区");
            sessionStorage.setItem("BaiduInit", true);
        }

           

        //定位，判断是否为当前的当前
        //var setTime2 = setInterval(function () {
        //    if (province) {
        //        if ( localStorage.getItem("address") ) {
        //            if (BaiduMap.geolocationName != localStorage.getItem("address2")) {
        //                layer.confirm('是否切换为常用地区' + localStorage.getItem("address2"), {
        //                    title: "当前所在地不为常用地区",
        //                    btn: ['确认', '取消'] //可以无限个按钮
        //                }, function (index, layero) {
        //                    map.centerAndZoom(localStorage.getItem("address2"), 12);
        //                    $("#select-city").val(localStorage.getItem("address"))
        //                    layer.close(index); //如果设定了yes回调，需进行手工关闭
        //                }, function (index) {
        //                    localStorage.setItem("address", area + " [ 切换 ]");
        //                    localStorage.setItem("address2", province + "-" + city + "-" + area);
        //                    $("#select-city").val(localStorage.getItem("address"))
        //                    layer.close(index); //如果设定了yes回调，需进行手工关闭
        //                });
        //            } else {
        //                localStorage.setItem("address", area + " [ 切换 ]");
        //                localStorage.setItem("address2", province + "-" + city + "-" + area);
        //                $("#select-city").val(localStorage.getItem("address"))
        //            }
        //        } else {
        //            localStorage.setItem("address", area + " [ 切换 ]");
        //            localStorage.setItem("address2", province + "-" + city + "-" + area);
        //        }
        //        clearInterval(setTime2);
        //    }
        //}, 100);
        //}

        //拖动的点击事件
        map.addEventListener("dragend", function (e) {
            if ($("#suggestId").val() == "") {
                //重新回到拖动的经纬度比
                BaiduMap.searchMap('dragend');
            }
        });
   
        //var myCity = new BMap.LocalCity();
        //myCity.get(myFun);
        //定位功能只能是市
        setTimeout(function () {
            BaiduMap.searchMap();
        }, 1000);
     
        //搜索框的点击事件，enter的实现方式
        document.onkeydown = function (event) {
            var e = event || window.event || arguments.callee.caller.arguments[0];
            if (e && e.keyCode == 13) { // enter 键
                //要做的事情,判断鼠标是否在这个地图的div上面不
                if ($(".search-box .map-search").is(':focus')) {
                    BaiduMap.searchMap();//开始第一次的搜索
                    //BaiduMap.addMarker();
                } else {
              
                }
           
            }
        };
     
        //end
    },
    BaiduMapsearchMap :function(){
        console.log($(".search-box .map-search").val());
    },
    myFun:function(result) {
        console.log("result", result);
        var cityName = result.name;
        map.setCenter(cityName);
    },
    //地图事件设置函数：
    setMapEvent:function() {
        map.enableDragging(); //启用地图拖拽事件，默认启用(可不写)
        map.enableScrollWheelZoom(); //启用地图滚轮放大缩小
        map.enableDoubleClickZoom(); //启用鼠标双击放大，默认启用(可不写)
        map.enableKeyboard(); //启用键盘上下左右键移动地图

        //地图缩放时事件
        map.addEventListener("zoomend", function () {
            var allOverlay = map.getOverlays();
            var zoom = map.getZoom();

            //地图缩小到15级时，隐藏所有marker点的文字标签
            if (zoom < 10) {
            }else {
            }
        })
        $(".BMap_cpyCtrl").css({ "display": "none" });
        $(".anchorBL").css({ "display": "none" });
    },
    //搜索框,type根据type的类型来判断是否是搜索框的判断事件
    searchMap: function (type, typeName) {
       
        var setTime = setInterval(function () {
            if (map.getBounds().getSouthWest() != null) {
                clearInterval(setTime); 
                    var bs = map.getBounds();
                    var bssw = bs.getSouthWest();
                    var bsne = bs.getNorthEast();
                    var LowerLeftCoordinate = bssw.lng + "," + bssw.lat;
                    var UpperRightCoordinate = bsne.lng + "," + bsne.lat;
                    map.clearOverlays();
                BaiduMap.GetMorePoint(LowerLeftCoordinate, UpperRightCoordinate, typeName, type);
                  
                    if (localStorage.getItem("address")) {
                        $(".select-city").val(localStorage.getItem("address"));
                    }
          
            }

        }, 500);
        
        //删除点
        //var allOverlay = map.getOverlays();
        //for (var i = 0; i < allOverlay.length - 1; i++) {
        //    map.removeOverlay(allOverlay[i]);
        //}
        //全部删除点
    },
    addMarker:function(){
        var datapoint = {
            Name: $(".search-box .map-search").val()
        }
        $.ajax({
            url: "/Company/GetAllSchoolAddress",
            type: "post",
            dataType: "json",
            data: datapoint,
            success: function (data) {
                if (data.Status.Code == 200) {
                    console.log("ssss");
                    if (data.ReturnData.length > 1) {
                     
                        $(data.ReturnData).each(function (index, item) {
                            // 百度地图API功能
                            debugger
                            var marker = new BMap.Marker(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE)); // 创建点
                            map.addOverlay(marker);//增加点
                            //添加方法的初始化
                            //  addClickHandler(sContent, marker);
                            var removeMarker = function (e, ee, marker) {
                                map.removeOverlay(marker);
                            }
                         
                        });
                    } else {
                        $(data.ReturnData).each(function (index, item) {

                            // 百度地图API功能
                            var marker = new BMap.Marker(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE)); // 创建点
                           
                            map.addOverlay(marker);//增加点
                            //添加方法的初始化
                            //  addClickHandler(sContent, marker);
                            var removeMarker = function (e, ee, marker) {
                                map.removeOverlay(marker);
                            };
                            map.centerAndZoom(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE), 18);
                        });
                    }
              
                } else {
                    console.log("异常报告",data.Status.Code+data.Status.Remark );
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                // 状态码
                console.log(XMLHttpRequest.status);
                // 状态
                console.log(XMLHttpRequest.readyState);
                // 错误信息   
                console.log(textStatus);
            }

        });
    },
    DateType:function(data) {
            if (typeof (data) == undefined) {
                return "";
            } else if (!data && typeof (data) != "undefined" && data != 0) {
                return "";
            } else if (data == null) {
                return "";
            } else {
                return data;
             }
    },
    mapDelect: function(){
        $(".search-box .map-search-ul").css({ height: "0px" });
        $("#suggestId").val("");
    },
    //获取点,名字，左上角的区间，右下角的区间,type=判断搜索类型
    GetMorePoint:function(LowerLeftCoordinate, UpperRightCoordinate,typeName,type) {
        var datapoint = {
           LowerLeftCoordinate: LowerLeftCoordinate
           , UpperRightCoordinate: UpperRightCoordinate
        }
        //判断是否有值说
        if ($(".search-box .map-search").val() != '') {
            datapoint = {
                Name: $(".search-box .map-search").val()
                , LowerLeftCoordinate: LowerLeftCoordinate
                , UpperRightCoordinate: UpperRightCoordinate
                , ScopeName: $("form.baidu-select  .layui-anim-upbit  dd.layui-this").html()
                , ParentName: "广东省-东莞市-" +localStorage.getItem("address2").slice(8)
            };
        } else if (typeName && typeName!='') {
            datapoint = {
                Name: $(".search-box .map-search").val()
                , LowerLeftCoordinate: LowerLeftCoordinate
                , UpperRightCoordinate: UpperRightCoordinate
                , ScopeName: typeName
                , ParentName: "广东省-东莞市-"+localStorage.getItem("address2").slice(8)
            };
        } else {
            datapoint = {
                Name: $(".search-box .map-search").val()
                , LowerLeftCoordinate: LowerLeftCoordinate
                , UpperRightCoordinate: UpperRightCoordinate
                , ScopeName: $("form.baidu-select  .layui-anim-upbit  dd.layui-this").html()
                , ParentName: "广东省-东莞市-" +localStorage.getItem("address2").slice(8)
            };
        }
        //debugger;
        $.ajax({
            url: "/Company/GetAllSchoolAddress",
            type: "post",
            data: datapoint,
            dataType: "json",
            success: function (data) {
                if (data.Status.Code == 200) {
                    if (data.ReturnData.length >1) {
                        $(data.ReturnData).each(function (index, item) {
                           
                      
                            var marker = new BMap.Marker(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE)); // 创建点
                            map.addOverlay(marker);//增加点
                            //if (type != "dragend") {
                            //    map.centerAndZoom(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE), 15);
                            //}
                            var sContent = '<li ><a href="/Company/Index/' + item.F_SCHOOLID + '" class="map_title"  target="_blank">\
                                            <h4> ' + BaiduMap.DateType(item.F_SC_NAME) + '</h4>\
                                            <h5 class="">地址: ' + BaiduMap.DateType(item.F_ADDR) + '</h5></a>\
                                            <div class="img-responsive"><img src="' + item.F_SCHOOLLOGOSRC + '"  style="width: 100%;height: auto;"/></div>\
                                            <h5 class="adress">联系电话:  ' + BaiduMap.DateType(item.F_OFFICE_PHONE) + '</h5>\
                                            <h5 class="adress">邮政编码: ' + BaiduMap.DateType(item.F_CLIENT_CODE) + '</h5>\
                                            <h5 class="adress">电子邮箱: ' + BaiduMap.DateType(item.F_FILLER_EMAIL) + '</h5>\
                                            <h5 class="adress">联 系 人: ' + BaiduMap.DateType(item.F_LEGAL_NAME) + '</h5>\
                                            <h5 class="adress">概况</h5><h5>' + BaiduMap.DateType(item.F_INTRODUCE) + '</h5>\
                                            </li>';
                            var contentmap = " ";
                            var opts = {
                                width: 180,
                                height: 10,
                                title: BaiduMap.DateType(item.F_SC_NAME), // 信息窗口标题
                                enableMessage: true//设置允许信息窗发送短息
                            }

                            var infoWindow = new BMap.InfoWindow(contentmap, opts);
                            //点击标注点事件
                            marker.addEventListener("click", function (e) {
                                this.openInfoWindow(infoWindow, new BMap.Point(item.LONGITUDE, item.DIMENSION)); //开启信息窗口
                                //点的搜索框的显示事件
                                var html = '<li>    ' + item.F_SC_NAME + ' </li>';
                                $(".map-search-ul").html(sContent);
                                //鼠标点击标点时，将其定位为中心点
                                map.setCenter(new BMap.Point(item.LONGITUDE, item.LATITUDE)); map.setZoom(16); 

                                $(".search-box .map-search-ul").css({ height: "auto" });
                            });

                            //给标点设置文字标签
                            var label = new BMap.Label(item.NAME, { offset: new BMap.Size(20, -20) });
                            label.setStyle({
                                color: "blue",
                                fontSize: "10px",
                                height: "20px",
                                lineHeight: "20px",
                                fontFamily: "微软雅黑",
                                fontWeight: "bold",
                                border: "1px solid #ddd",
                                padding: "1px 3px",
                                display: "none",
                                borderRadius: "5px"
                            });
                            marker.setLabel(label);


                            //添加方法的初始化
                            //  addClickHandler(sContent, marker);
                            var removeMarker = function (e, ee, marker) {
                                map.removeOverlay(marker);
                            }
                        });
                    } else if (data.ReturnData.length == 1) {
                        $(data.ReturnData).each(function (index, item) {
                            if (type != "dragend") {
                                map.centerAndZoom(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE), 18);
                            }

                            var marker = new BMap.Marker(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE)); // 创建点
                            map.addOverlay(marker);//增加点
                         //   map.centerAndZoom(new BMap.Point(item.F_LONGITUDE, item.F_LATITUDE), 12);
                            var sContent = '<li ><a href="/Company/Index/' + item.F_SCHOOLID + '" class="map_title"  target="_blank">\
                                            <h4> ' + BaiduMap.DateType(item.F_SC_NAME) + '</h4>\
                                            <h5 class="">地址: ' + BaiduMap.DateType(item.F_ADDR) + '</h5></a>\
                                            <div class="img-responsive"><img src="' + item.F_SCHOOLLOGOSRC + '"  style="width: 100%;height: auto;"/></div>\
                                            <h5 class="adress">联系电话:  ' + BaiduMap.DateType(item.F_OFFICE_PHONE) + '</h5>\
                                            <h5 class="adress">邮政编码: ' + BaiduMap.DateType(item.F_CLIENT_CODE) + '</h5>\
                                            <h5 class="adress">电子邮箱: ' + BaiduMap.DateType(item.F_FILLER_EMAIL) + '</h5>\
                                            <h5 class="adress">联 系 人: ' + BaiduMap.DateType(item.F_LEGAL_NAME) + '</h5>\
                                            <h5 class="adress">概况</h5><h5>' + BaiduMap.DateType(item.F_INTRODUCE) + '</h5>\
                                            </li>';
                            var contentmap = " ";
                            var opts = {
                                width: 180,
                                height: 10,
                                title: BaiduMap.DateType(item.F_SC_NAME), // 信息窗口标题
                                enableMessage: true//设置允许信息窗发送短息
                            }

                            var infoWindow = new BMap.InfoWindow(contentmap, opts);
                            //点击标注点事件
                            marker.addEventListener("click", function (e) {
                                this.openInfoWindow(infoWindow, new BMap.Point(item.LONGITUDE, item.DIMENSION)); //开启信息窗口
                                //点的搜索框的显示事件
                                var html = '<li>    ' + item.F_SC_NAME + ' </li>';
                                $(".map-search-ul").html(sContent);

                                $(".search-box .map-search-ul").css({ height: "auto" });
                            });

                            //添加方法的初始化
                            //  addClickHandler(sContent, marker);
                            var removeMarker = function (e, ee, marker) {
                                map.removeOverlay(marker);
                            }
                        });
                   } 
                  

                } else {
                    console.log("异常报告",data.Status.Code+data.Status.Remark );
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                // 状态码
                console.log(XMLHttpRequest.status);
                // 状态
                console.log(XMLHttpRequest.readyState);
                // 错误信息   
                console.log(textStatus);
            }

        });
    }
   , setMapPolygon: function () {
        //百度地图 自定义 多边形覆盖层 2018年5月21日16:02:18
    var boundaries = '113.752978,23.06249;113.752735,23.063155;113.752502,23.063837;113.752241,23.064552;113.752816,23.064951;113.753427,23.065433;113.752843,23.066468;113.752592,23.06764;113.752475,23.068363;113.754253,23.069269;113.755044,23.069843;113.75508,23.069884;113.755718,23.070192;113.755987,23.070325;113.755893,23.072041;113.755884,23.072548;113.757716,23.073346;113.760429,23.074643;113.762962,23.075557;113.767436,23.07697;113.76961,23.078051;113.772287,23.078283;113.775341,23.078017;113.777838,23.077319;113.779401,23.076272;113.781216,23.076471;113.784809,23.077685;113.788834,23.080079;113.793289,23.082273;113.795409,23.084251;113.797871,23.086329;113.80123,23.088274;113.804428,23.089288;113.807932,23.090734;113.811633,23.093377;113.815585,23.095737;113.819987,23.097299;113.821406,23.097665;113.826796,23.098463;113.832024,23.100258;113.833911,23.100723;113.837486,23.100598;113.842122,23.101496;113.846505,23.102892;113.847439,23.100831;113.848482,23.09872;113.84867,23.095886;113.848711,23.093218;113.848707,23.093609;113.846721,23.0938;113.844772,23.093991;113.843577,23.094107;113.843478,23.094141;113.843972,23.094988;113.84373,23.095013;113.842607,23.095362;113.841803,23.094012;113.841381,23.093471;113.841978,23.092998;113.842117,23.092881;113.842126,23.092807;113.842073,23.092736;113.841071,23.092146;113.84099,23.091967;113.841004,23.091768;113.841134,23.091452;113.841475,23.091124;113.841848,23.090617;113.842814,23.089378;113.843568,23.088381;113.844655,23.087284;113.845778,23.086079;113.846456,23.085684;113.846398,23.085352;113.847031,23.085098;113.847552,23.084417;113.84854,23.083282;113.849259,23.081869;113.849474,23.081611;113.849964,23.080843;113.850454,23.080681;113.851226,23.080398;113.851644,23.080319;113.851931,23.080394;113.8526,23.080888;113.853135,23.081346;113.853472,23.081645;113.853746,23.081661;113.854523,23.080972;113.855179,23.080606;113.856473,23.079912;113.858099,23.079064;113.85888,23.078665;113.860232,23.077954;113.859877,23.077875;113.859769,23.077917;113.859554,23.07768;113.859374,23.077576;113.859118,23.077506;113.858435,23.077373;113.857757,23.077264;113.856958,23.07724;113.85698,23.076521;113.856985,23.075806;113.856482,23.074846;113.856248,23.074463;113.855525,23.073823;113.854362,23.072784;113.853553,23.072227;113.851891,23.073781;113.85111,23.074455;113.849547,23.07487;113.849232,23.074679;113.848109,23.072825;113.846825,23.070698;113.846798,23.07044;113.847418,23.068669;113.848226,23.066359;113.848657,23.065145;113.84872,23.064854;113.848675,23.064638;113.848424,23.064181;113.848352,23.063674;113.848406,23.063374;113.84872,23.062202;113.849062,23.06187;113.850176,23.061446;113.851806,23.060693;113.852228,23.060228;113.85199,23.060099;113.851954,23.059945;113.851927,23.059243;113.851914,23.059176;113.851801,23.05842;113.851779,23.058283;113.851842,23.057127;113.851864,23.056271;113.851864,23.0562;113.851958,23.055194;113.852044,23.05418;113.852129,23.052962;113.852336,23.051491;113.852425,23.050227;113.852497,23.048847;113.852533,23.048124;113.852277,23.046199;113.852111,23.045156;113.852098,23.045118;113.851792,23.04432;113.851478,23.043834;113.851217,23.043285;113.850368,23.043035;113.849605,23.042104;113.849075,23.041015;113.848859,23.040687;113.847575,23.039897;113.846348,23.039465;113.845302,23.039099;113.8437,23.038775;113.842878,23.038081;113.842415,23.037906;113.842294,23.037341;113.842119,23.036771;113.84065,23.03715;113.838369,23.037836;113.838593,23.0388;113.837825,23.039;113.836801,23.039274;113.8361,23.039469;113.836374,23.040405;113.836545,23.040928;113.836985,23.042421;113.836927,23.042425;113.836379,23.042284;113.835624,23.042084;113.835207,23.041972;113.834838,23.041872;113.834573,23.041785;113.832772,23.041348;113.832669,23.041323;113.832166,23.041194;113.831532,23.041028;113.830746,23.040837;113.830621,23.040812;113.830189,23.0407;113.829624,23.04055;113.828483,23.040272;113.828231,23.04021;113.828249,23.039461;113.828142,23.039432;113.828173,23.038975;113.828182,23.038397;113.828187,23.038131;113.82635,23.038181;113.826143,23.038073;113.825959,23.037113;113.825914,23.036984;113.825501,23.036963;113.824441,23.036834;113.823623,23.036855;113.821732,23.037678;113.82144,23.037695;113.820704,23.037491;113.81959,23.037005;113.817852,23.036855;113.817587,23.036863;113.816855,23.036768;113.816603,23.036734;113.816338,23.036635;113.816176,23.036597;113.816019,23.036822;113.816019,23.036822;113.813028,23.037865;113.811555,23.038618;113.810162,23.039358;113.810027,23.039678;113.809839,23.039686;113.809933,23.039254;113.810342,23.038813;113.810665,23.038368;113.8108,23.037911;113.810503,23.037308;113.81049,23.03703;113.810409,23.036797;113.810292,23.035836;113.810234,23.035246;113.810117,23.034602;113.809987,23.033891;113.809942,23.033837;113.809843,23.033429;113.809897,23.033246;113.810432,23.033251;113.810409,23.033113;113.810252,23.032989;113.810194,23.03296;113.81014,23.032823;113.809789,23.032802;113.80974,23.032224;113.809583,23.031962;113.809435,23.0316;113.809268,23.031014;113.809021,23.030066;113.808087,23.030137;113.807885,23.030037;113.806654,23.030141;113.806564,23.028732;113.806555,23.028466;113.808541,23.02832;113.809268,23.028187;113.809556,23.02788;113.809538,23.027547;113.809318,23.026391;113.811384,23.025992;113.812723,23.025767;113.812498,23.024296;113.812255,23.023705;113.812264,23.022815;113.811204,23.022691;113.810917,23.021626;113.812525,23.021136;113.813549,23.020928;113.814101,23.02015;113.814245,23.019839;113.814281,23.019564;113.814277,23.019036;113.814133,23.018504;113.814196,23.018209;113.814834,23.017564;113.814667,23.017739;113.815489,23.016916;113.815835,23.016587;113.817232,23.016097;113.818112,23.015951;113.818445,23.015835;113.818719,23.015614;113.819657,23.015751;113.820888,23.015722;113.821243,23.013743;113.821432,23.012105;113.821513,23.01035;113.823148,23.009469;113.823723,23.008354;113.823956,23.007107;113.822321,23.005893;113.821297,23.005061;113.821468,23.004421;113.823013,23.00487;113.823139,23.003772;113.822168,23.003489;113.822689,23.002957;113.826911,23.003855;113.830415,23.003722;113.830478,23.003339;113.833272,23.002932;113.834466,23.003148;113.835185,23.001576;113.835877,23.000129;113.835329,22.999771;113.835302,22.999605;113.835401,22.999314;113.835369,22.998557;113.835122,22.998412;113.834772,22.998299;113.834633,22.998303;113.834314,22.997825;113.833882,22.99753;113.833195,22.997272;113.833321,22.996914;113.833573,22.996927;113.833644,22.996873;113.833631,22.996257;113.83373,22.996149;113.834026,22.996025;113.834763,22.99432;113.835589,22.99269;113.831853,22.991135;113.831233,22.990843;113.832409,22.98849;113.831709,22.988124;113.831287,22.987882;113.831089,22.987866;113.831116,22.987475;113.83152,22.986369;113.832194,22.985836;113.831421,22.98399;113.829301,22.982093;113.829984,22.980297;113.831183,22.977951;113.833452,22.977702;113.835249,22.977827;113.836507,22.977478;113.836534,22.974666;113.830299,22.973768;113.833713,22.971405;113.838169,22.970906;113.839714,22.968976;113.841546,22.964917;113.841115,22.961356;113.839085,22.95891;113.838636,22.959226;113.837719,22.95916;113.837081,22.959368;113.837045,22.959651;113.837243,22.960291;113.837405,22.960491;113.837315,22.960682;113.836641,22.961073;113.836255,22.961714;113.836282,22.962188;113.835896,22.962579;113.835519,22.961938;113.835591,22.96084;113.835303,22.960341;113.833848,22.960458;113.831908,22.960557;113.831099,22.959975;113.831656,22.959676;113.83268,22.959027;113.833197,22.959156;113.835541,22.958989;113.835748,22.958894;113.839202,22.956839;113.839121,22.955932;113.836318,22.9551;113.831036,22.955782;113.825736,22.95891;113.824407,22.960075;113.821263,22.960408;113.820993,22.959975;113.820706,22.959027;113.820706,22.958627;113.82049,22.958087;113.820445,22.957354;113.819987,22.95678;113.819807,22.956231;113.819475,22.955849;113.820409,22.955366;113.820717,22.955526;113.821081,22.955938;113.821359,22.955772;113.821476,22.955202;113.821597,22.954969;113.822177,22.954578;113.822437,22.954594;113.822671,22.954819;113.822895,22.955102;113.82316,22.955035;113.823228,22.954777;113.82312,22.95432;113.823241,22.954041;113.823371,22.953896;113.823758,22.953729;113.824602,22.953055;113.825047,22.952406;113.825285,22.951807;113.825824,22.951333;113.826111,22.951275;113.826884,22.951495;113.827063,22.951728;113.827211,22.952127;113.827548,22.952127;113.827898,22.951844;113.828253,22.95182;113.82908,22.95199;113.829412,22.951961;113.830063,22.951595;113.830414,22.951316;113.830414,22.951316;113.829161,22.950638;113.827386,22.950409;113.826542,22.949877;113.826686,22.949136;113.827355,22.948529;113.829457,22.947639;113.830409,22.947855;113.830998,22.948579;113.831577,22.949174;113.832466,22.950364;113.832924,22.950796;113.833365,22.950963;113.834272,22.951516;113.834272,22.951516;113.83491,22.951524;113.835242,22.951046;113.834968,22.950788;113.833432,22.950143;113.83283,22.949578;113.831977,22.948309;113.83204,22.947868;113.832983,22.94756;113.833562,22.94751;113.833648,22.947082;113.833419,22.946861;113.833194,22.946757;113.832372,22.946998;113.831442,22.947123;113.831029,22.947032;113.830697,22.946745;113.831236,22.946158;113.831757,22.94538;113.832264,22.944182;113.832669,22.943724;113.83292,22.943733;113.833549,22.943916;113.833854,22.943741;113.833926,22.9433;113.834986,22.941561;113.835507,22.940862;113.835867,22.940746;113.837412,22.940779;113.838436,22.940962;113.838921,22.940812;113.839945,22.94008;113.840556,22.939714;113.840879,22.93963;113.840956,22.939489;113.840776,22.939277;113.840201,22.939323;113.839536,22.939622;113.839087,22.939951;113.838746,22.940017;113.836761,22.939643;113.836383,22.939156;113.836311,22.93889;113.836132,22.937783;113.835979,22.936785;113.835898,22.936277;113.834542,22.936177;113.834578,22.936935;113.834407,22.938724;113.834147,22.939123;113.834147,22.939123;113.831218,22.94251;113.830603,22.942506;113.830306,22.94261;113.828258,22.945439;113.827697,22.945896;113.826951,22.946312;113.826744,22.946354;113.826385,22.946345;113.826138,22.946412;113.825181,22.947223;113.824485,22.947502;113.823744,22.947356;113.823542,22.947048;113.823443,22.946757;113.822697,22.946632;113.822545,22.946453;113.822504,22.945879;113.822343,22.945155;113.821979,22.94501;113.820551,22.945513;113.820434,22.945642;113.820497,22.94575;113.82082,22.945655;113.821368,22.945771;113.821552,22.945825;113.822069,22.947061;113.822001,22.947298;113.822338,22.94761;113.822877,22.948192;113.822841,22.949078;113.822221,22.949815;113.821426,22.950218;113.821098,22.950214;113.820443,22.950838;113.820982,22.952073;113.821363,22.952964;113.821363,22.953138;113.821363,22.953138;113.821107,22.953762;113.820811,22.953779;113.819876,22.954145;113.818529,22.954361;113.817855,22.954394;113.817181,22.954527;113.814549,22.955068;113.81171,22.956133;113.810417,22.957123;113.80853,22.957722;113.806213,22.956274;113.80438,22.95456;113.803446,22.952813;113.80138,22.951116;113.798685,22.949219;113.796619,22.946889;113.795253,22.945475;113.794499,22.944344;113.790151,22.94649;113.788534,22.944493;113.787483,22.943927;113.784572,22.943361;113.783135,22.943428;113.78141,22.943927;113.781321,22.941964;113.780468,22.941864;113.780167,22.942322;113.779726,22.942796;113.7797,22.943237;113.779839,22.944468;113.779466,22.94478;113.779587,22.945496;113.779605,22.945874;113.779704,22.946178;113.77903,22.946602;113.778384,22.946677;113.778186,22.946552;113.778002,22.946257;113.777095,22.945778;113.776547,22.945791;113.776089,22.945853;113.775523,22.946298;113.775294,22.94711;113.775451,22.947442;113.776219,22.94817;113.776385,22.948507;113.776816,22.948799;113.778092,22.948907;113.778938,22.949134;113.780299,22.950074;113.780362,22.950265;113.78025,22.950823;113.777968,22.95185;113.777083,22.95237;113.776845,22.952678;113.776728,22.953048;113.776787,22.955328;113.775516,22.955374;113.775102,22.955478;113.774882,22.955353;113.775215,22.954417;113.775255,22.953265;113.774294,22.953256;113.774096,22.95279;113.773854,22.951909;113.773041,22.951002;113.771801,22.950532;113.770764,22.950889;113.770764,22.950889;113.772098,22.952478;113.772125,22.952932;113.771747,22.953173;113.77035,22.95279;113.769946,22.953086;113.769744,22.953444;113.770036,22.953681;113.76987,22.953968;113.769987,22.954388;113.770436,22.95532;113.770674,22.955694;113.771424,22.956135;113.772187,22.957708;113.770391,22.95777;113.768648,22.958024;113.768127,22.958149;113.767489,22.957957;113.766708,22.957874;113.766573,22.957774;113.766321,22.9572;113.76642,22.956643;113.766546,22.956169;113.767094,22.95651;113.76783,22.955678;113.767121,22.955062;113.7666,22.955953;113.76598,22.95557;113.766636,22.954197;113.767103,22.953107;113.767103,22.953107;113.767103,22.952334;113.765405,22.953432;113.764578,22.954763;113.764668,22.955096;113.765212,22.955229;113.765338,22.955869;113.765221,22.955911;113.765346,22.956809;113.765573,22.957427;113.765663,22.958658;113.765052,22.959216;113.763534,22.958875;113.762797,22.958575;113.761171,22.957469;113.760453,22.958226;113.760363,22.958733;113.760596,22.959906;113.760372,22.960563;113.761055,22.960671;113.762447,22.960647;113.762591,22.960572;113.76401,22.960231;113.765393,22.961171;113.765366,22.963234;113.76542,22.963492;113.764809,22.963417;113.764702,22.963517;113.764702,22.963579;113.764477,22.963583;113.764455,22.963134;113.764419,22.963096;113.764315,22.962913;113.764302,22.962772;113.763107,22.962772;113.762846,22.96313;113.761337,22.96313;113.759981,22.963055;113.759532,22.96293;113.759181,22.963313;113.75893,22.963525;113.758121,22.962918;113.757529,22.962169;113.757169,22.961462;113.757286,22.962352;113.757012,22.962074;113.756832,22.962069;113.756549,22.962385;113.75623,22.962377;113.755628,22.962115;113.755305,22.962265;113.754883,22.962943;113.755215,22.963005;113.756037,22.963513;113.756774,22.963608;113.758175,22.964253;113.758382,22.964295;113.758382,22.964295;113.758193,22.965705;113.757771,22.966275;113.758535,22.966916;113.759675,22.96694;113.759729,22.966816;113.759702,22.965435;113.759945,22.965435;113.759981,22.967074;113.760035,22.967656;113.760394,22.96996;113.760735,22.971657;113.762015,22.970896;113.762671,22.971907;113.762999,22.972335;113.763088,22.97236;113.763205,22.972343;113.76387,22.971649;113.764041,22.971287;113.763601,22.970759;113.763327,22.97038;113.76352,22.970127;113.763924,22.970093;113.763956,22.970164;113.764319,22.970285;113.764724,22.970642;113.764849,22.970817;113.764984,22.970775;113.765887,22.970206;113.766372,22.970543;113.766834,22.970905;113.767086,22.97073;113.767486,22.969856;113.767944,22.969083;113.768699,22.969557;113.768842,22.970397;113.767953,22.970954;113.766933,22.971278;113.766255,22.971445;113.7659,22.972015;113.765698,22.972102;113.764688,22.971823;113.764441,22.972027;113.764158,22.97199;113.763717,22.972114;113.763237,22.972418;113.763107,22.972505;113.762981,22.972526;113.762747,22.972755;113.762473,22.973308;113.762563,22.973774;113.76255,22.973882;113.762015,22.97399;113.761993,22.974053;113.7618,22.974019;113.76166,22.974065;113.760969,22.974514;113.761481,22.975371;113.762056,22.976594;113.762361,22.976814;113.76277,22.976943;113.765114,22.978091;113.764755,22.978781;113.764674,22.979147;113.764602,22.979364;113.764319,22.979672;113.763987,22.979431;113.763793,22.979156;113.763722,22.97916;113.763088,22.97963;113.763079,22.979905;113.762783,22.980716;113.762657,22.980757;113.761561,22.980458;113.761341,22.980999;113.761727,22.981144;113.764117,22.981793;113.765505,22.982163;113.767374,22.98265;113.767828,22.983095;113.772849,22.983848;113.773343,22.984322;113.774587,22.984501;113.774326,22.986073;113.7743,22.987021;113.773141,22.987279;113.772638,22.987512;113.767221,22.991097;113.768348,22.992486;113.769381,22.9937;113.770239,22.994657;113.770774,22.99528;113.769071,22.996216;113.767396,22.997139;113.765734,22.998004;113.764719,22.99852;113.762945,22.999439;113.761454,23.000237;113.763151,23.002508;113.764625,23.004504;113.764656,23.004753;113.764647,23.004986;113.764593,23.005202;113.764063,23.005414;113.764301,23.005859;113.764436,23.006167;113.76356,23.006496;113.764018,23.007365;113.763044,23.007818;113.762914,23.008517;113.762793,23.008957;113.762716,23.009045;113.762685,23.009228;113.761072,23.010234;113.761921,23.011386;113.762604,23.012296;113.763493,23.013494;113.764194,23.014408;113.764517,23.014887;113.764468,23.015273;113.765496,23.016616;113.766745,23.018612;113.768056,23.02045;113.76877,23.021494;113.768748,23.021668;113.768631,23.021938;113.766295,23.024246;113.76621,23.024354;113.766039,23.024757;113.766596,23.024928;113.769219,23.025813;113.769273,23.025747;113.769601,23.025921;113.769785,23.026133;113.76979,23.026266;113.770163,23.026404;113.770778,23.026525;113.771169,23.026683;113.772126,23.026807;113.77315,23.027136;113.773379,23.027281;113.773379,23.027377;113.773307,23.027601;113.773298,23.027859;113.77363,23.027963;113.773774,23.027934;113.773949,23.028075;113.774174,23.027784;113.775045,23.027639;113.775616,23.028175;113.775679,23.028296;113.775773,23.028325;113.776006,23.028188;113.776366,23.028657;113.77708,23.028204;113.777556,23.028138;113.777799,23.027772;113.778436,23.02726;113.778894,23.027123;113.778957,23.027455;113.779114,23.027867;113.779267,23.028387;113.779303,23.028807;113.778337,23.028732;113.778207,23.029833;113.777394,23.0298;113.777111,23.029862;113.775359,23.031251;113.775764,23.03155;113.775975,23.031683;113.776308,23.03209;113.776582,23.032228;113.776986,23.032847;113.776325,23.033263;113.776038,23.033126;113.776092,23.033425;113.775149,23.03404;113.774933,23.034015;113.774762,23.033899;113.774807,23.034277;113.774897,23.035117;113.775813,23.035029;113.775773,23.035952;113.775728,23.036036;113.775714,23.036289;113.77588,23.036672;113.776657,23.036622;113.776635,23.036472;113.77703,23.036468;113.777021,23.035924;113.777066,23.035836;113.77738,23.036073;113.7776,23.036044;113.778225,23.035608;113.778512,23.035637;113.778822,23.035953;113.778112,23.036618;113.778323,23.036913;113.778508,23.037183;113.778656,23.037179;113.778808,23.037287;113.778849,23.037678;113.778885,23.037686;113.780412,23.037661;113.780488,23.038214;113.780542,23.039141;113.780614,23.039507;113.78061,23.039711;113.783197,23.039673;113.783282,23.039931;113.78365,23.039811;113.784337,23.039541;113.784849,23.039258;113.785069,23.039599;113.785074,23.039599;113.784553,23.039932;113.784571,23.040098;113.784625,23.040264;113.784971,23.040672;113.785541,23.041299;113.786902,23.042966;113.787495,23.043619;113.78758,23.04381;113.787508,23.043935;113.7871,23.044758;113.786583,23.045677;113.786426,23.045777;113.786345,23.046089;113.78648,23.04702;113.786605,23.047452;113.786641,23.047997;113.786623,23.048096;113.786197,23.048142;113.786251,23.048529;113.785919,23.048541;113.785478,23.048421;113.785483,23.048903;113.785465,23.049888;113.78564,23.050005;113.785658,23.051272;113.785317,23.051339;113.785312,23.051842;113.785438,23.051933;113.78551,23.053442;113.786795,23.0537;113.787545,23.053845;113.78755,23.054245;113.787765,23.054328;113.788354,23.05429;113.788399,23.056023;113.789149,23.056115;113.78936,23.056389;113.79007,23.056472;113.790101,23.056917;113.790797,23.056921;113.790743,23.057507;113.791035,23.057528;113.791017,23.057594;113.791525,23.057711;113.790802,23.059872;113.790443,23.060604;113.789495,23.060113;113.789293,23.060018;113.788808,23.060288;113.78839,23.060629;113.787995,23.060949;113.787726,23.060941;113.786648,23.06267;113.786176,23.062449;113.786109,23.062474;113.785691,23.063027;113.785058,23.062695;113.785008,23.062632;113.784869,23.06257;113.784689,23.062616;113.784213,23.062358;113.784254,23.062088;113.783612,23.061805;113.783243,23.061685;113.783064,23.061639;113.782731,23.06146;113.781317,23.062192;113.780392,23.06208;113.780297,23.062441;113.7793,23.062283;113.779426,23.061893;113.779543,23.061698;113.780095,23.061357;113.779448,23.060492;113.77966,23.060305;113.778285,23.058684;113.778321,23.058526;113.778299,23.058381;113.778577,23.057882;113.778523,23.05777;113.778088,23.057724;113.778114,23.05698;113.777791,23.056016;113.777849,23.055754;113.777355,23.055521;113.777261,23.055675;113.776412,23.055533;113.776317,23.055259;113.776061,23.055226;113.775796,23.055114;113.774866,23.055018;113.774723,23.054544;113.773784,23.054706;113.773663,23.054349;113.773456,23.054374;113.773389,23.054129;113.773128,23.054108;113.77302,23.054253;113.772863,23.054241;113.772616,23.05412;113.772499,23.054058;113.772486,23.054071;113.772194,23.053958;113.771381,23.053518;113.77095,23.053676;113.770738,23.05363;113.770595,23.053638;113.7705,23.053717;113.770352,23.053634;113.770258,23.053634;113.769867,23.053501;113.769885,23.053385;113.76975,23.053322;113.769602,23.053227;113.769333,23.053339;113.769184,23.053455;113.768753,23.053322;113.76856,23.053451;113.76829,23.053771;113.768057,23.053713;113.767908,23.053555;113.767634,23.053438;113.767531,23.053534;113.767405,23.053413;113.767082,23.054174;113.766732,23.054635;113.766552,23.054748;113.765829,23.055101;113.765919,23.055297;113.764733,23.055833;113.764023,23.056116;113.762658,23.056714;113.762168,23.056993;113.761706,23.057263;113.761364,23.057404;113.761939,23.059042;113.761166,23.059333;113.76056,23.058805;113.760057,23.058169;113.759801,23.058244;113.759541,23.058389;113.759258,23.058157;113.758916,23.058443;113.7584,23.058373;113.758031,23.05802;113.757879,23.057924;113.757766,23.057974;113.757187,23.057396;113.757048,23.057483;113.756356,23.057492;113.756185,23.057429;113.756257,23.058165;113.755983,23.058551;113.756225,23.059225;113.756347,23.060339;113.756616,23.060871;113.756706,23.061287;113.757254,23.062401;113.757461,23.06265;113.757102,23.062991;113.756877,23.063032;113.755718,23.063103;113.755045,23.062626;113.75354,23.061566;113.752978,23.06249';

    var pointArray = [];
    var ply = new BMap.Polygon(boundaries, { strokeWeight: 2, strokeColor: "#2484e6" }); //建立多边形覆盖物
    ply.setFillColor("#2484e6")//设置背景色
    ply.setFillOpacity(0.2)//设置背景色透明度
    ply.disableMassClear();//禁止覆盖物在map.clearOverlays方法中被清除

    map.addOverlay(ply);  //添加覆盖物
    pointArray = pointArray.concat(ply.getPath());
    map.setViewport(pointArray);    //调整视野  定位到当前

},
addMapControl: function () {
    // 左下角，添加比例尺
    map.addControl(new BMap.ScaleControl({ anchor: BMAP_ANCHOR_BOTTOM_LEFT }));
    //右下角，添加默认缩放平移控件
    map.addControl(new BMap.NavigationControl({ anchor: BMAP_ANCHOR_BOTTOM_RIGHT, enableGeolocation: true, offset: new BMap.Size(-15, 65) }));
    // 右下角，添加缩略图
    map.addControl(new BMap.OverviewMapControl({ isOpen: true, anchor: BMAP_ANCHOR_BOTTOM_RIGHT, offset: new BMap.Size(50, 10) }));
}
};


function addClickHandler(content, marker) {
    marker.addEventListener("click", function (e) {
        openInfo(content, e);
        var html = '<li>    ' + content + ' </li>';
        $(".map-search-ul").html(content);
    }
    );
}
function openInfo(content, e) {
    var p = e.target;
    var point = new BMap.Point(p.getPosition().lng, p.getPosition().lat);
    var infoWindow = new BMap.InfoWindow(content, opts);  // 创建信息窗口对象 
    map.openInfoWindow(infoWindow, point); //开启信息窗口
}